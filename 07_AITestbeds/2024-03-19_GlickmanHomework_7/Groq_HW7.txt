tokenizer_config.json: 100%|███████████████████| 346/346 [00:00<00:00, 1.68MB/s]
vocab.txt: 100%|█████████████████████████████| 232k/232k [00:00<00:00, 13.9MB/s]
special_tokens_map.json: 100%|██████████████████| 112/112 [00:00<00:00, 728kB/s]
config.json: 100%|█████████████████████████████| 760/760 [00:00<00:00, 6.81MB/s]
pytorch_model.bin: 100%|████████████████████| 17.6M/17.6M [00:00<00:00, 162MB/s]
/home/seg12b/miniconda3/envs/groqflow/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()
  return self.fget.__get__(instance, owner)()



Building "bert_tiny"
    ✓ Exporting PyTorch to ONNX   
    ✓ Optimizing ONNX file   
    ✓ Checking for Op support   
    ✓ Converting to FP16   
    ✓ Compiling model   
    ✓ Assembling model   

Woohoo! Saved to ~/.cache/groqflow/bert_tiny
Preprocessing data.
/home/seg12b/miniconda3/envs/groqflow/lib/python3.10/site-packages/datasets/load.py:1461: FutureWarning: The repository for sst contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/sst
You can avoid this message in future by passing the argument `trust_remote_code=True`.
Passing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.
  warnings.warn(
Downloading builder script: 100%|██████████| 9.13k/9.13k [00:00<00:00, 22.0MB/s]
Downloading readme: 100%|██████████████████| 6.68k/6.68k [00:00<00:00, 33.0MB/s]
Downloading data: 100%|████████████████████| 6.37M/6.37M [00:01<00:00, 6.27MB/s]
Downloading data: 100%|██████████████████████| 790k/790k [00:00<00:00, 1.65MB/s]
Generating train split: 100%|█████| 8544/8544 [00:00<00:00, 11426.80 examples/s]
Generating validation split: 100%|█| 1101/1101 [00:00<00:00, 2027.29 examples/s]
Generating test split: 100%|███████| 2210/2210 [00:00<00:00, 3909.42 examples/s]

Info: No inputs received for benchmark. Using the inputs provided during model compilation.
Running inference on GroqChip.
Running inference using PyTorch model (CPU).
100%|██████████████████████████████████████| 2210/2210 [00:04<00:00, 451.44it/s]
+--------+----------+-------------------------+----------------+----------------------+-------------+
| Source | Accuracy | end-to-end latency (ms) | end-to-end IPS | on-chip latency (ms) | on-chip IPS |
+--------+----------+-------------------------+----------------+----------------------+-------------+
|  cpu   |  77.47%  |           2.22          |     451.33     |          --          |      --     |
|  groq  |  77.47%  |           0.06          |    17237.84    |         0.03         |   37576.72  |
+--------+----------+-------------------------+----------------+----------------------+-------------+
Proof point /home/seg12b/groqflow/proof_points/natural_language_processing/bert/bert_tiny.py finished!

I am not sure how to replace the dummy input with real input. I see the torch.ones() function that fills an array of ones which takes the place of the input data, but I do not understand what values to put in place of that.
